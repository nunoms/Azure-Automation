{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webSiteName": {
      "type":"string"
    },
    "hostingPlanName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "MonitoringServicePlan"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "percentOfTrafficToStagingSlot": {
      "type": "int",
      "defaultValue": 20,
      "minValue": 1,
      "maxValue": 50,
      "metadata": {
        "description": "Percent of traffic to send to staging slot (through Testing in Production feature)"
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "type": "config",
          "name": "web",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "properties": {
            "defaultDocuments": [
              "default.aspx",
              "hostingstart.html"
            ],
            "routingRules": [
              {
                "actionHostName": "[reference(resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging'),'2015-05-01').hostNames[0]]",
                "reroutePercentage": "[parameters('percentOfTrafficToStagingSlot')]",
                "name": "Staging"
              }
            ],
            "experiments": {
              "rampUpRules": [
                {
                  "actionHostName": "[reference(resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging'),'2015-05-01').hostNames[0]]",
                  "reroutePercentage": "[parameters('percentOfTrafficToStagingSlot')]",
                  "name": "Staging"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "slotconfignames",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "properties": {
            "appSettingNames": [ "iKey" ]
          }
        },
        {
          "type": "config",
          "name": "appsettings",
          "apiVersion": "2015-04-01",
          "properties": {
            "useExternalApi": "false",
            "iKey": "[reference(concat('Microsoft.Insights/components/', parameters('webSiteName')), '2015-05-01').InstrumentationKey]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ]
        },
        {
          "type": "slots",
          "name": "Staging",
          "apiVersion": "2015-04-01",
          "location": "[resourceGroup().location]",
          "properties": {},
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "resources": [
            {
              "type": "config",
              "name": "appsettings",
              "apiVersion": "2015-04-01",
              "properties": {
                "useExternalApi": "true",
                "iKey": "[reference(concat('Microsoft.Insights/components/', parameters('webSiteName'), '-Staging'), '2015-05-01').InstrumentationKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging')]"
              ]
            },
            {
              "type": "config",
              "name": "logs",
              "apiVersion": "2015-08-01",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Verbose"
                  },
                  "azureTableStorage": {
                    "level": "Off",
                    "sasUrl": null
                  },
                  "azureBlobStorage": {
                    "level": "Off",
                    "sasUrl": null,
                    "retentionInDays": null
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 35,
                    "retentionInDays": null,
                    "enabled": true
                  },
                  "azureBlobStorage": {
                    "sasUrl": null,
                    "retentionInDays": null,
                    "enabled": false
                  }
                },
                "failedRequestsTracing": {
                  "enabled": false
                },
                "detailedErrorMessages": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('ServerErrors ', parameters('webSiteName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
        "displayName": "ServerErrorsAlertRule"
      },
      "properties": {
        "name": "[concat('ServerErrors ', parameters('webSiteName'))]",
        "description": "[concat(parameters('webSiteName'), ' has some server errors, status code 5xx.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]",
            "metricName": "Http5xx"
          },
          "operator": "GreaterThan",
          "threshold": 0.0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
        "displayName": "ForbiddenRequestsAlertRule"
      },
      "properties": {
        "name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
        "description": "[concat(parameters('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]",
            "metricName": "Http403"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "CPUHighAlertRule"
      },
      "properties": {
        "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
        "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
            "metricName": "CpuPercentage"
          },
          "operator": "GreaterThan",
          "threshold": 90,
          "windowSize": "PT15M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "LongHttpQueueAlertRule"
      },
      "properties": {
        "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
        "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
            "metricName": "HttpQueueLength"
          },
          "operator": "GreaterThan",
          "threshold": 100.0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[parameters('webSiteName')]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('webSiteName'),'-staging')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging')]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/Sites/slots', parameters('webSiteName'), 'Staging'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[concat(parameters('webSiteName'),'-staging')]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('webSiteName'),'-dev')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "tags": {
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[concat(parameters('webSiteName'),'-dev')]"
      }
    }
  ],
  "outputs": {
    "ApplicationInsightsDevKey": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Insights/components/', parameters('webSiteName'), '-dev'), '2015-05-01').InstrumentationKey]"
    }
  }
}